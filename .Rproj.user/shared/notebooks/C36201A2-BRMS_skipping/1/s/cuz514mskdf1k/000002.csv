"0","```r
warmup = 2000
iter = 5000
chains = 4
cores=4
formula_skip <- brmsformula( skipping ~ cond + (cond|subject) + (cond|sentence_nr))

formula_ffd <- brmsformula(ffd ~ cond + (cond|subject) + (cond|sentence_nr))

formula_gd <- brmsformula(gd ~ cond + (cond|subject) + (cond|sentence_nr))

formula_gp <- brmsformula(gopast ~ cond + (cond|subject) + (cond|sentence_nr))

formula_tvt <- brmsformula(tvt ~ cond + (cond|subject) + (cond|sentence_nr))

fit_brms <- function(data, 
                     priors = set_prior(\"normal(0,200)\", class = \"b\"),
                                       formula,
                                       warmup = 2000,
                                       iter = 10000,
                                       chains = 4,
                                       cores = 4,
                                       threads = threading(2),
                                       seed = NA,
                                       control = NULL
){
  brm(data = data,
      formula = formula,
      warmup = warmup,
      iter = iter,
      chains = chains,
      prior = priors,
      sample_prior = \"yes\",
      family = exgaussian(),
      #init = \"0\",
      #control = list(adapt_delta =  0.8),
      control = control,
      cores = cores,
      backend = \"cmdstanr\",
      threads = threads,
      seed = seed,
      silent = 0)
}

fit_brms_skip <- function(data, 
                          priors = set_prior(\"normal(0,200)\", class = \"b\"),
                                       formula,
                                       warmup = 2000,
                                       iter = 10000,
                                       chains = 4,
                                       cores = 4,
                                       threads = threading(2),
                                       seed = NA,
                                       control = NULL
){
  brm(data = data,
      formula = formula,
      warmup = warmup,
      iter = iter,
      chains = chains,
      prior = priors,
      sample_prior = \"yes\",
      family = bernoulli(),
      #init = \"0\",
      #control = list(adapt_delta =  0.8),
      control = control,
      cores = cores,
      backend = \"cmdstanr\",
      threads = threads,
      seed = seed,
      silent = 0)
}

```"
